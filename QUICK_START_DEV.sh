#!/bin/bash
# SIAME 2026v3 - Script de Inicio R√°pido para Desarrollo
# Compatible con Mac y Linux

set -e

echo "======================================"
echo "üöÄ SIAME 2026v3 - Inicio R√°pido"
echo "======================================"
echo ""

# Verificar que Docker est√© corriendo
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker no est√° corriendo. Por favor inicia Docker Desktop."
    exit 1
fi

echo "‚úÖ Docker est√° corriendo"
echo ""

# Verificar que existe .env
if [ ! -f .env ]; then
    echo "üìù Creando archivo .env desde template..."
    cp .env.example .env
    echo "‚úÖ Archivo .env creado"
    echo "‚ö†Ô∏è  IMPORTANTE: Edita .env con tus configuraciones antes de continuar"
    echo ""
    read -p "¬øQuieres continuar con valores por defecto? (s/n) " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[SsYy]$ ]]; then
        echo "Abortando. Edita .env y vuelve a ejecutar este script."
        exit 0
    fi
fi

echo "======================================"
echo "Paso 1/5: Iniciando PostgreSQL y Redis"
echo "======================================"
docker compose up -d postgres redis
echo "‚è≥ Esperando a que los servicios est√©n saludables..."
sleep 15

# Verificar que est√©n corriendo
if docker compose ps | grep -q "siame_postgres.*Up"; then
    echo "‚úÖ PostgreSQL iniciado"
else
    echo "‚ùå PostgreSQL no pudo iniciar"
    docker compose logs postgres
    exit 1
fi

if docker compose ps | grep -q "siame_redis.*Up"; then
    echo "‚úÖ Redis iniciado"
else
    echo "‚ùå Redis no pudo iniciar"
    docker compose logs redis
    exit 1
fi

echo ""
echo "======================================"
echo "Paso 2/5: Verificando Node.js"
echo "======================================"
cd src/frontend

if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando dependencias del frontend..."
    npm install
    echo "‚úÖ Dependencias instaladas"
else
    echo "‚úÖ Dependencias ya instaladas"
fi

echo ""
echo "======================================"
echo "Paso 3/5: Aplicando migraciones de BD"
echo "======================================"
echo "‚è≥ Aplicando migraciones Prisma..."

if npx prisma migrate dev --name init; then
    echo "‚úÖ Migraciones aplicadas correctamente"
else
    echo "‚ö†Ô∏è  Las migraciones pueden haber fallado, pero intentemos continuar..."
fi

echo ""
echo "======================================"
echo "Paso 4/5: Generando cliente Prisma"
echo "======================================"
npx prisma generate
echo "‚úÖ Cliente Prisma generado"

cd ../..

echo ""
echo "======================================"
echo "Paso 5/5: Iniciando todos los servicios"
echo "======================================"
docker compose up -d

echo ""
echo "‚è≥ Esperando a que todos los servicios inicien..."
sleep 10

echo ""
echo "======================================"
echo "‚úÖ SIAME 2026v3 est√° corriendo!"
echo "======================================"
echo ""
echo "üìç Servicios disponibles:"
echo ""
echo "   üåê Frontend:           http://localhost:3000"
echo "   üîå Backend API:        http://localhost:8000"
echo "   üìö Docs API:           http://localhost:8000/docs"
echo "   üìä Grafana:            http://localhost:3001"
echo "   üìà Prometheus:         http://localhost:9090"
echo "   üóÑÔ∏è  PostgreSQL:         localhost:5432"
echo "   üíæ Redis:              localhost:6379"
echo ""
echo "======================================"
echo "üìã Comandos √∫tiles:"
echo "======================================"
echo ""
echo "  Ver logs:              docker compose logs -f"
echo "  Ver estado:            docker compose ps"
echo "  Detener todo:          docker compose stop"
echo "  Reiniciar:             docker compose restart"
echo "  Limpiar todo:          docker compose down -v"
echo ""
echo "======================================"
echo "üìñ Documentaci√≥n:"
echo "======================================"
echo ""
echo "  Desarrollo:            DESARROLLO_LOCAL.md"
echo "  Deployment:            DEPLOYMENT_WINDOWS_SERVER_2025.md"
echo "  General:               README.md"
echo ""
echo "======================================"
echo "üéâ ¬°Listo para desarrollar!"
echo "======================================"
echo ""
